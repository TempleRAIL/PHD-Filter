<launch>

  <arg name="sensor_type" default="bearing" />

  <arg name="rviz_on" default="true" />

<!--
	Robot Information
-->
  <arg name="agent_prefix" default="robot" />
  <arg name="num_agents"   default="1" />

  <arg name="sensor_config_file" default="$(find phd_sensor)/config/$(arg sensor_type)_sensor.yaml" />

	<arg name="sensor_frame_id" default="sensor" />
	<arg name="base_frame_id"   default="base" />
  <arg name="odom_frame_id"   default="odom" />
  <arg name="global_frame_id" default="/map" />
  
<!--
  Target information
-->
  <arg name="num_target_types" default="3" />

  <arg name="target_prefix0" default="chair" />
  <arg name="num_targets0"   default="10" />
  <arg name="motion_model_file0"  value="$(find phd_filter)/config/static_motion_model.yaml" />
  <arg name="sensor_config_file0" default="$(find phd_sensor)/config/$(arg sensor_type)_sensor_$(arg target_prefix0).yaml" />
	
  <arg name="target_prefix1" default="table" />
  <arg name="num_targets1"   default="10" />
  <arg name="motion_model_file1"  value="$(find phd_filter)/config/static_motion_model.yaml" />
  <arg name="sensor_config_file1" default="$(find phd_sensor)/config/$(arg sensor_type)_sensor_$(arg target_prefix1).yaml" />
	
  <arg name="target_prefix2" default="person" />
  <arg name="num_targets2"   default="10" />
  <arg name="motion_model_file2"  value="$(find phd_filter)/config/grw_motion_model.yaml" />
  <arg name="sensor_config_file2" default="$(find phd_sensor)/config/$(arg sensor_type)_sensor_$(arg target_prefix2).yaml" />

<!--
  Bring up rviz
-->
	<group if="$(arg rviz_on)">
    <node name="rviz" pkg="rviz" type="rviz"
          args="--display-config=$(find phd_sensor)/launch/robot0.rviz" />
  </group>

<!--
	Bring up maps for static
-->

  <node name="map" pkg="map_server" type="map_server" output="screen"
        args="$(find maps)/simple_room/simple_rooms.yaml" >
    <param name="frame_id" value="$(arg global_frame_id)" />
  </node> 
<!--
	Bring up maps for dynamic

  <node name="map" pkg="map_server" type="map_server" output="screen"
        args="$(find maps)/empty/empty.yaml" >
    <param name="frame_id" value="$(arg global_frame_id)" />
  </node>-->

<!--
	Bring up agent simulator
-->
  <node name="kinematic_sim" pkg="kinematic_sim" type="kinematic_sim"
        output="screen" respawn="false">
    <param name="publish_freq" value="7"/>
    <param name="pub_global_frame" value="true"/>

    <param name="base_frame_id" value="$(arg base_frame_id)"/>
    <param name="odom_frame_id" value="$(arg odom_frame_id)"/>
    <param name="global_frame_id" value="$(arg global_frame_id)"/>

    <param name="noise_x_sd" value="0.0"/>
    <param name="noise_y_sd" value="0.0"/>
    <param name="noise_th_sd" value="0.0"/>

    <param name="num_agents" value="$(arg num_agents)"/>
    <param name="agent_prefix" value="$(arg agent_prefix)"/>

    <param name="initial0" value="2.0 2.0 0.0"/>
    <!--param name="initial1" value="2.20 15.50 0.00"/>
    <param name="initial2" value="25.50 2.10 0.00"/>
    <param name="initial3" value="14.20 4.70 0.00"/>
    <param name="initial4" value="19.20 24.70 0.00"/-->
  </node>

  <node name="robot_pose_aggregator" pkg="phd_utils" type="pose_aggregator"
        output="screen" respawn="false" launch-prefix="">
    <param name="publish_freq" value="7"/>
    
    <param name="num_types" value="1"/>
    <param name="type0"     value="$(arg agent_prefix)"/>
    <param name="count0"    value="$(arg num_agents)"/>
    
    <param name="frame_id" value="$(arg base_frame_id)"/>
    <param name="pose_topic" value="gt_pose"/>
  </node>

<!--
	Bring up target simulators
-->
  <node name="$(arg target_prefix0)_sim" pkg="kinematic_sim" type="kinematic_sim"
        output="screen" respawn="false">
    <param name="publish_freq" value="1"/>
    <param name="pub_global_frame" value="true"/>

    <param name="base_frame_id" value="$(arg base_frame_id)"/>
    <param name="odom_frame_id" value="$(arg odom_frame_id)"/>
    <param name="global_frame_id" value="$(arg global_frame_id)"/>

    <param name="num_agents" value="$(arg num_targets0)"/>
    <param name="agent_prefix" value="$(arg target_prefix0)"/>

    <rosparam file="$(find phd_filter)/launch/targets_simple-1.yaml" command="load" />
  </node>
  
  <node name="$(arg target_prefix1)_sim" pkg="kinematic_sim" type="kinematic_sim"
        output="screen" respawn="false">
    <param name="publish_freq" value="1"/>
    <param name="pub_global_frame" value="true"/>

    <param name="base_frame_id" value="$(arg base_frame_id)"/>
    <param name="odom_frame_id" value="$(arg odom_frame_id)"/>
    <param name="global_frame_id" value="$(arg global_frame_id)"/>

    <param name="num_agents" value="$(arg num_targets1)"/>
    <param name="agent_prefix" value="$(arg target_prefix1)"/>

    <rosparam file="$(find phd_filter)/launch/targets_simple-2.yaml" command="load" />
  </node>
  
  <node name="$(arg target_prefix2)_sim" pkg="kinematic_sim" type="kinematic_sim"
        output="screen" respawn="false">
    <param name="publish_freq" value="7"/>
    <param name="pub_global_frame" value="true"/>

    <param name="base_frame_id" value="$(arg base_frame_id)"/>
    <param name="odom_frame_id" value="$(arg odom_frame_id)"/>
    <param name="global_frame_id" value="$(arg global_frame_id)"/>

    <param name="noise_x_sd" value="0.0"/>
    <param name="noise_y_sd" value="0.0"/>
    <param name="noise_th_sd" value="0.0"/>

    <param name="num_agents" value="$(arg num_targets2)"/>
    <param name="agent_prefix" value="$(arg target_prefix2)"/>

    <!--rosparam file="$(find phd_filter)/launch/targets_simple-3.yaml" command="load" /-->
	<rosparam file="$(find phd_filter)/launch/targets_simple-3.yaml" command="load" />

  </node>

  <!--node name="person_pose_aggregator" pkg="phd_utils" type="pose_aggregator"
        output="screen" respawn="false" launch-prefix="">
    <param name="publish_freq" value="7"/>
    
    <param name="num_types" value="1"/>
    <param name="type0"     value="$(arg target_prefix2)"/>
    <param name="count0"    value="$(arg num_targets2)"/>
    
    <param name="frame_id" value="$(arg base_frame_id)"/>
    <param name="pose_topic" value="gt_pose"/>
  </node-->

  <node name="target_aggregator" pkg="phd_utils" type="pose_aggregator"
        output="screen" respawn="false" launch-prefix="" >
    <remap from="~/pose_array" to="/target_array"/>

    <param name="publish_freq" value="7"/>
    
    <param name="num_types" value="$(arg num_target_types)"/>
    <param name="type0" value="$(arg target_prefix0)"/>
    <param name="count0" value="$(arg num_targets0)"/>
    <param name="type1" value="$(arg target_prefix1)"/>
    <param name="count1" value="$(arg num_targets1)"/>
    <param name="type2" value="$(arg target_prefix2)"/>
    <param name="count2" value="$(arg num_targets2)"/>

    <param name="frame_id" value="$(arg base_frame_id)"/>
    <param name="pose_topic" value="gt_pose"/>
  </node>

  <!--=============================== Team ================================-->
  <group ns="$(arg agent_prefix)0">
		
		<node name="$(anon transformer)" pkg="tf" type="static_transform_publisher"
          args="0.0 0.0 0.0 0.0 0.0 3.14159 /$(arg agent_prefix)0/$(arg base_frame_id)
                /$(arg agent_prefix)0/$(arg sensor_frame_id) 100" />
                
		<!--
			Visualize sensor measurements
		-->
		<node name="sensor_vis" pkg="phd_sensor" type="$(arg sensor_type)_vis"
					output="screen" respawn="false">
			<param name="frame_id" value="$(arg sensor_frame_id)"/>
			<param name="agent_prefix" value="$(arg agent_prefix)"/>
		</node>

    <node name="measurement_sim" pkg="phd_sensor" type="$(arg sensor_type)_sim"
          output="screen" respawn="false" launch-prefix="" >
      <remap from="target_array" to="/target_array"/>
      <remap from="map" to="/map"/>
<!--
      <remap from="measurements" to="measurements_raw"/>
-->
      <remap from="pose" to="gt_pose"/>
      <param name="publish_freq" value="5"/>
      <param name="frame_id" value="$(arg sensor_frame_id)"/>
      <rosparam file="$(arg sensor_config_file)" command="load" />
    </node>
  </group>

<!--group ns="$(arg agent_prefix)1">
		
		<node name="$(anon transformer)" pkg="tf" type="static_transform_publisher"
          args="0.0 0.0 0.0 0.0 0.0 3.14159 /$(arg agent_prefix)1/$(arg base_frame_id)
                /$(arg agent_prefix)1/$(arg sensor_frame_id) 100" />

		<node name="sensor_vis" pkg="phd_sensor" type="$(arg sensor_type)_vis"
					output="screen" respawn="false">
			<param name="frame_id" value="$(arg sensor_frame_id)"/>
			<param name="agent_prefix" value="$(arg agent_prefix)"/>
		</node>

    <node name="measurement_sim" pkg="phd_sensor" type="$(arg sensor_type)_sim"
          output="screen" respawn="false" launch-prefix="" >
      <remap from="target_array" to="/target_array"/>
      <remap from="map" to="/map"/>

      <remap from="pose" to="gt_pose"/>
      <param name="publish_freq" value="5"/>
      <param name="frame_id" value="$(arg sensor_frame_id)"/>
      <rosparam file="$(arg sensor_config_file)" command="load" />
    </node>
  </group>

<group ns="$(arg agent_prefix)2">
		
		<node name="$(anon transformer)" pkg="tf" type="static_transform_publisher"
          args="0.0 0.0 0.0 0.0 0.0 3.14159 /$(arg agent_prefix)2/$(arg base_frame_id)
                /$(arg agent_prefix)2/$(arg sensor_frame_id) 100" />

		<node name="sensor_vis" pkg="phd_sensor" type="$(arg sensor_type)_vis"
					output="screen" respawn="false">
			<param name="frame_id" value="$(arg sensor_frame_id)"/>
			<param name="agent_prefix" value="$(arg agent_prefix)"/>
		</node>

    <node name="measurement_sim" pkg="phd_sensor" type="$(arg sensor_type)_sim"
          output="screen" respawn="false" launch-prefix="" >
      <remap from="target_array" to="/target_array"/>
      <remap from="map" to="/map"/>

      <remap from="pose" to="gt_pose"/>
      <param name="publish_freq" value="5"/>
      <param name="frame_id" value="$(arg sensor_frame_id)"/>
      <rosparam file="$(arg sensor_config_file)" command="load" />
    </node>
  </group>

<group ns="$(arg agent_prefix)3">
		
		<node name="$(anon transformer)" pkg="tf" type="static_transform_publisher"
          args="0.0 0.0 0.0 0.0 0.0 3.14159 /$(arg agent_prefix)3/$(arg base_frame_id)
                /$(arg agent_prefix)3/$(arg sensor_frame_id) 100" />

		<node name="sensor_vis" pkg="phd_sensor" type="$(arg sensor_type)_vis"
					output="screen" respawn="false">
			<param name="frame_id" value="$(arg sensor_frame_id)"/>
			<param name="agent_prefix" value="$(arg agent_prefix)"/>
		</node>

    <node name="measurement_sim" pkg="phd_sensor" type="$(arg sensor_type)_sim"
          output="screen" respawn="false" launch-prefix="" >
      <remap from="target_array" to="/target_array"/>
      <remap from="map" to="/map"/>

      <remap from="pose" to="gt_pose"/>
      <param name="publish_freq" value="5"/>
      <param name="frame_id" value="$(arg sensor_frame_id)"/>
      <rosparam file="$(arg sensor_config_file)" command="load" />
    </node>
  </group>

<group ns="$(arg agent_prefix)4">
		
		<node name="$(anon transformer)" pkg="tf" type="static_transform_publisher"
          args="0.0 0.0 0.0 0.0 0.0 3.14159 /$(arg agent_prefix)4/$(arg base_frame_id)
                /$(arg agent_prefix)4/$(arg sensor_frame_id) 100" />

		<node name="sensor_vis" pkg="phd_sensor" type="$(arg sensor_type)_vis"
					output="screen" respawn="false">
			<param name="frame_id" value="$(arg sensor_frame_id)"/>
			<param name="agent_prefix" value="$(arg agent_prefix)"/>
		</node>

    <node name="measurement_sim" pkg="phd_sensor" type="$(arg sensor_type)_sim"
          output="screen" respawn="false" launch-prefix="" >
      <remap from="target_array" to="/target_array"/>
      <remap from="map" to="/map"/>

      <remap from="pose" to="gt_pose"/>
      <param name="publish_freq" value="5"/>
      <param name="frame_id" value="$(arg sensor_frame_id)"/>
      <rosparam file="$(arg sensor_config_file)" command="load" />
    </node>
  </group-->

</launch>
